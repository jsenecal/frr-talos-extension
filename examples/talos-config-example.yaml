# Example Talos machine configuration using ExtensionServiceConfig
# This shows the modern approach without environment variables

machine:
  # Install the FRR extension
  install:
    extensions:
      - image: ghcr.io/jsenecal/frr-talos-extension:latest

---
# ExtensionServiceConfig contains ALL configuration
# No environment variables needed!
apiVersion: v1alpha1
kind: ExtensionServiceConfig
name: frr
configFiles:
  # Main configuration file
  - content: |
      bgp:
        cilium:
          local_asn: 4200099998
          remote_asn: 4200099999
          namespace: cilium
          peering:
            ipv4:
              local: 192.168.250.254
              remote: 192.168.250.255
              prefix: 31
            ipv6:
              local: "fdae:6bef:5e65::1"
              remote: "fdae:6bef:5e65::2"
              prefix: 126

        upstream:
          local_asn: 4200001001      # Node-specific ASN
          router_id: 10.10.10.10      # Node-specific IP
          router_id_v6: "2001:db8::1"  # Node-specific IPv6 (optional)

          # Multiple peers with individual configurations
          peers:
            - address: 10.0.0.1
              remote_asn: 48579
              description: "Primary Leaf Switch"
              password: "secretPassword1"
              timers:
                keepalive: 1
                hold: 3
              bfd:
                enabled: true
                profile: aggressive  # Fast detection for primary

            - address: 10.0.0.2
              remote_asn: 48579
              description: "Secondary Leaf Switch"
              password: "secretPassword2"
              timers:
                keepalive: 1
                hold: 3
              bfd:
                enabled: true
                profile: normal     # Standard detection for secondary

            # IPv6 peer example
            - address: "2001:db8:ffff::1"
              remote_asn: 48579
              description: "Leaf Switch IPv6"
              password: "ipv6Password"
              address_family: ipv6
              bfd:
                enabled: true
                profile: normal

      network:
        interface_mtu: 1500
        veth_names:
          frr_side: veth-frr
          cilium_side: veth-cilium

      # BFD Configuration
      bfd:
        profiles:
          aggressive:
            detect_multiplier: 3
            receive_interval: 100
            transmit_interval: 100
            echo_mode: false
          normal:
            detect_multiplier: 3
            receive_interval: 300
            transmit_interval: 300
            echo_mode: false
          relaxed:
            detect_multiplier: 5
            receive_interval: 1000
            transmit_interval: 1000
            echo_mode: false

        cilium_peering:
          enabled: true
          profile: aggressive
          check_control_plane_failure: true

    mountPath: /usr/local/etc/frr/config.yaml

  # FRR daemons configuration
  - content: |
      zebra=true
      zebra_options="-n -A 127.0.0.1"
      bgpd=true
      bgpd_options="-A 127.0.0.1"
      staticd=true
      staticd_options="-A 127.0.0.1"
      bfdd=true
      bfdd_options="-A 127.0.0.1"
    mountPath: /usr/local/etc/frr/daemons

  # VTY shell configuration
  - content: |
      service integrated-vtysh-config
      hostname frr
    mountPath: /usr/local/etc/frr/vtysh.conf

---
# For per-node configuration, create separate ExtensionServiceConfig for each node
# Example for node2:
apiVersion: v1alpha1
kind: ExtensionServiceConfig
name: frr
configFiles:
  - content: |
      bgp:
        upstream:
          local_asn: 4200001002      # Node 2's ASN
          router_id: 10.10.10.2       # Node 2's IP
          peers:
            - address: 10.0.0.3       # Node 2's upstream peer
              remote_asn: 48579
              password: "node2Secret"
      # ... rest of configuration same as above
    mountPath: /usr/local/etc/frr/config.yaml
